-- Îç∞Ïù¥ÌÑ∞ Î≥¥Ï°¥ Ï†ïÏ±Ö ÌÖåÏä§Ìä∏
-- 2025-01-30: 100Ïùº Îç∞Ïù¥ÌÑ∞ Î≥¥Ï°¥ Ï†ïÏ±Ö Î∞è ÏùºÍ¥ÄÏÑ± ÌôïÏù∏

-- 1. Îç∞Ïù¥ÌÑ∞ Ï†ïÎ¶¨ Ìï®Ïàò Ïã§Ìñâ ÌÖåÏä§Ìä∏
SELECT 'Testing cleanup_old_data function...' as test_step;
SELECT cleanup_old_data();

-- 2. ÏÇ¨Ïö©Ïûê Ï¥ùÍ≥Ñ ÎèôÍ∏∞Ìôî ÌÖåÏä§Ìä∏
SELECT 'Testing sync_user_totals function...' as test_step;
SELECT sync_user_totals();

-- 3. Îç∞Ïù¥ÌÑ∞ Î≥¥Ï°¥ ÏÉÅÌÉú ÌôïÏù∏
SELECT 'Checking data retention status...' as test_step;
SELECT * FROM data_retention_status;

-- 4. ÏÇ¨Ïö©Ïûê Îç∞Ïù¥ÌÑ∞ ÏùºÍ¥ÄÏÑ± ÌôïÏù∏ (ÏÉÅÏúÑ 5Î™Ö)
SELECT 'Checking user data consistency...' as test_step;
SELECT * FROM user_data_consistency LIMIT 5;

-- 5. get_dashboard_stats Ìï®Ïàò ÌÖåÏä§Ìä∏ (100d Í∏∞Í∞Ñ)
SELECT 'Testing get_dashboard_stats with 100d period...' as test_step;
-- Ï≤´ Î≤àÏß∏ ÏÇ¨Ïö©Ïûê ID Í∞ÄÏ†∏Ïò§Í∏∞
DO $$
DECLARE
    test_user_id UUID;
    stats_result JSON;
BEGIN
    -- Ï≤´ Î≤àÏß∏ ÏÇ¨Ïö©Ïûê ID Í∞ÄÏ†∏Ïò§Í∏∞
    SELECT id INTO test_user_id FROM users WHERE role = 'user' LIMIT 1;
    
    IF test_user_id IS NOT NULL THEN
        -- ÎåÄÏãúÎ≥¥Îìú ÌÜµÍ≥Ñ Ï°∞Ìöå ÌÖåÏä§Ìä∏
        SELECT get_dashboard_stats(test_user_id, '100d') INTO stats_result;
        
        RAISE NOTICE '‚úÖ Dashboard stats test completed for user: %', test_user_id;
        RAISE NOTICE 'üìä Stats result keys: %', (SELECT array_agg(key) FROM json_object_keys(stats_result) key);
    ELSE
        RAISE NOTICE '‚ö†Ô∏è No test user found';
    END IF;
END;
$$;

-- 6. Ìä∏Î¶¨Í±∞ ÌÖåÏä§Ìä∏Î•º ÏúÑÌïú ÏÉòÌîå Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ (ÌÖåÏä§Ìä∏ ÌõÑ ÏÇ≠Ï†ú)
DO $$
DECLARE
    test_user_id UUID;
    test_search_id UUID;
    test_report_id UUID;
BEGIN
    -- Ï≤´ Î≤àÏß∏ ÏÇ¨Ïö©Ïûê ID Í∞ÄÏ†∏Ïò§Í∏∞
    SELECT id INTO test_user_id FROM users WHERE role = 'user' LIMIT 1;
    
    IF test_user_id IS NOT NULL THEN
        -- ÌÖåÏä§Ìä∏ Í≤ÄÏÉâ Í∏∞Î°ù ÏÇΩÏûÖ
        INSERT INTO search_history (user_id, keyword, technology_field, ipc_codes, created_at)
        VALUES (test_user_id, 'test_search_trigger', 'AI Technology', ARRAY['G06N'], NOW())
        RETURNING id INTO test_search_id;
        
        -- ÌÖåÏä§Ìä∏ Î¶¨Ìè¨Ìä∏ ÏÇΩÏûÖ
        INSERT INTO ai_analysis_reports (user_id, invention_title, analysis_type, created_at)
        VALUES (test_user_id, 'Test Report for Trigger', 'patentability', NOW())
        RETURNING id INTO test_report_id;
        
        -- ÌÖåÏä§Ìä∏ Î°úÍ∑∏Ïù∏ ÌôúÎèô ÏÇΩÏûÖ
        INSERT INTO user_activities (user_id, activity_type, created_at)
        VALUES (test_user_id, 'login', NOW());
        
        RAISE NOTICE '‚úÖ Test data inserted - Search: %, Report: %', test_search_id, test_report_id;
        
        -- ÏÇ¨Ïö©Ïûê Ï¥ùÍ≥Ñ ÌôïÏù∏
        RAISE NOTICE 'üìä User totals after trigger test: %', (
            SELECT json_build_object(
                'total_searches', total_searches,
                'total_reports', total_reports,
                'total_logins', total_logins
            )
            FROM users WHERE id = test_user_id
        );
        
        -- ÌÖåÏä§Ìä∏ Îç∞Ïù¥ÌÑ∞ Ï†ïÎ¶¨
        DELETE FROM search_history WHERE id = test_search_id;
        DELETE FROM ai_analysis_reports WHERE id = test_report_id;
        DELETE FROM user_activities WHERE user_id = test_user_id AND activity_type = 'login' AND created_at >= NOW() - INTERVAL '1 minute';
        
        RAISE NOTICE 'üßπ Test data cleaned up';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è No test user found for trigger test';
    END IF;
END;
$$;

SELECT '‚úÖ All tests completed successfully!' as final_result;